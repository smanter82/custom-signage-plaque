{"version":3,"sources":["components/SignForm.js","components/SignCard.js","App.js","reportWebVitals.js","index.js"],"names":["SignForm","useState","signName","signCost","setName","showFormLabel","setFormShowLabel","showSignCost","setShowSignCost","useEffect","console","log","Form","className","Label","Control","type","onChange","event","value","target","setSignName","Button","onClick","signDollars","length","SignCard","Card","Title","Body","App","Container","fluid","Row","Col","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wWAQe,SAASA,IACtB,MAA4BC,mBAAS,CACnCC,SAAU,GACVC,SAAU,KAFZ,mBAAOD,EAAP,KAAiBE,EAAjB,KAIA,EAA0CH,oBAAS,GAAnD,mBAAOI,EAAP,KAAsBC,EAAtB,KACA,EAAwCL,oBAAS,GAAjD,mBAAOM,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACkB,KAAtBP,EAASA,UACXI,GAAiB,GAEnBI,QAAQC,IAAIT,KACX,CAACA,IAqBJ,OACE,qCACE,eAACU,EAAA,EAAD,CAAMC,UAAU,WAAhB,UACE,eAACD,EAAA,EAAKE,MAAN,CAAYD,UAAWN,EAAe,cAAgB,gBAAtD,cACIL,EAASC,YAEb,cAACS,EAAA,EAAKE,MAAN,CAAYD,UAAWN,EAAe,gBAAkB,YAAxD,yBAGA,cAACK,EAAA,EAAKE,MAAN,CAAYD,UAAWR,EAAgB,YAAc,kBAArD,0CAGA,cAACO,EAAA,EAAKG,QAAN,CACEF,UAAU,YACVG,KAAK,OACLC,SAAU,SAACC,GAAD,OAvBE,SAACA,GACnB,IAAQC,EAAUD,EAAME,OAAhBD,MACRf,EAAQ,2BACHF,GADE,IAELA,SAAUiB,KAmBeE,CAAYH,SAE7B,IACR,cAACI,EAAA,EAAD,CAAQT,UAAU,MAAMG,KAAK,SAASO,QArCrB,WACnB,IACMC,EAA2B,EADdtB,EAASA,SAASuB,OAErCrB,EAAQ,2BACHF,GADE,IAELC,SAAUqB,KAGZhB,GAAgB,IA6Bd,0B,MCtDS,SAASkB,IACtB,OACE,eAACC,EAAA,EAAD,CAAMd,UAAU,mBAAhB,UACE,cAACc,EAAA,EAAKC,MAAN,CAAYf,UAAU,aAAtB,4BACA,cAACc,EAAA,EAAKE,KAAN,CAAWhB,UAAU,mBAArB,SACE,cAAC,EAAD,SCUOiB,MAhBf,WACE,OACE,qBAAKjB,UAAU,MAAf,SACE,cAACkB,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACC,EAAA,EAAD,CAAKpB,UAAU,6BAAf,UACE,cAACqB,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,CAAKrB,UAAU,UAAf,SACE,cAAC,EAAD,MAEF,cAACqB,EAAA,EAAD,YCFKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.69754f40.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../styles/SignForm.css\";\n\n//Look up how to have input text pop up automatically in capitals\n//Get Sign Characters to stay up onsubmit\n\nexport default function SignForm() {\n  const [signName, setName] = useState({\n    signName: \"\",\n    signCost: \"\",\n  });\n  const [showFormLabel, setFormShowLabel] = useState(true);\n  const [showSignCost, setShowSignCost] = useState(false);\n\n  useEffect(() => {\n    if (signName.signName !== \"\") {\n      setFormShowLabel(false);\n    }\n    console.log(signName);\n  }, [signName]);\n\n  const handleSubmit = () => {\n    const nameLength = signName.signName.length;\n    const signDollars = nameLength * 5;\n    setName({\n      ...signName,\n      signCost: signDollars,\n    });\n\n    setShowSignCost(true);\n  };\n\n  const setSignName = (event) => {\n    const { value } = event.target;\n    setName({\n      ...signName,\n      signName: value,\n    });\n  };\n\n  return (\n    <>\n      <Form className=\"signForm\">\n        <Form.Label className={showSignCost ? \"costDisplay\" : \"noCostDisplay\"}>\n          ${signName.signCost}\n        </Form.Label>\n        <Form.Label className={showSignCost ? \"noCostDisplay\" : \"enterName\"}>\n          Enter name:\n        </Form.Label>\n        <Form.Label className={showFormLabel ? \"formLabel\" : \"formLabelNoShow\"}>\n          Please enter a name below...\n        </Form.Label>\n        <Form.Control\n          className=\"formInput\"\n          type=\"text\"\n          onChange={(event) => setSignName(event)}\n        ></Form.Control>\n      </Form>{\" \"}\n      <Button className=\"btn\" type=\"submit\" onClick={handleSubmit}>\n        SHOW COST\n      </Button>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport SignForm from \"./SignForm\";\nimport \"../styles/SignCard.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default function SignCard() {\n  return (\n    <Card className=\"signCard mx-auto\">\n      <Card.Title className=\"cardTitle \">CUSTOM SIGNAGE</Card.Title>\n      <Card.Body className=\"mx-auto cardBody\">\n        <SignForm></SignForm>\n      </Card.Body>\n    </Card>\n  );\n}\n","import \"./App.css\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport SignCard from \"./components/SignCard.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container fluid>\n        <Row className=\"cardRow align-items-center\">\n          <Col></Col>\n          <Col className=\"cardCol\">\n            <SignCard></SignCard>\n          </Col>\n          <Col></Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}